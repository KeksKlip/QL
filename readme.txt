QL Library 
Version 0.4.3

1. function sendLimit(class,security,direction,price,volume,account,client_code,comment,execution_condition,expite_date)
-- отправка лимитированной заявки
-- все параметры кроме кода клиента и коментария должны быть не нил
-- execution_condition может принимать 2 варианта - FILL_OR_KILL(Немедленно или отклонить),KILL_BALANCE(Снять остаток). Если параметр не указан то по умолчанию Поставить в очередь. ВНИМАНИЕ! Работает ТОЛЬКО на срочном рынке!
-- expire_date - указывается для переноса заявок на срочном рынке
-- ВАЖНО! цена должна быть стрингом с количеством знаков после точки для данной бумаги
-- если код клиента нил - подлставляем счет
-- Данная функция возвращает 2 параметра 
-- 1. ID присвоенный транзакции либо nil если транзакция отвергнута на уровне сервера Квик
-- 2. Ответное сообщение сервера Квик либо строку с параметрами транзакции
2. function sendMarket(class,security,direction,volume,account,client_code,comment)
-- отправка рыночной заявки
-- все параметры кроме кода клиента и коментария должны быть не нил
-- если код клиента нил - подлставляем счет
-- Данная функция возвращает 2 параметра 
-- 1. ID присвоенный транзакции либо nil если транзакция отвергнута на уровне сервера Квик
-- 2. Ответное сообщение сервера Квик либо строку с параметрами транзакции
3. function sendRPS(class,security,direction,price,volume,account,client_code,partner)
-- функция отправки заявки на внебиржевую сделку
-- Данная функция возвращает 2 параметра 
-- 1. ID присвоенный транзакции либо nil если транзакция отвергнута на уровне сервера Квик
-- 2. Ответное сообщение сервера Квик либо строку с параметрами транзакции
4. function sendReportOnRPS(class,operation,key)
-- отправка отчета по сделки для исполнения
-- Данная функция возвращает 2 параметра 
-- 1. ID присвоенный транзакции либо nil если транзакция отвергнута на уровне сервера Квик
-- 2. Ответное сообщение сервера Квик либо строку с параметрами транзакции
5. function killOrder(orderkey,security,class)
-- функция отмены лимитированной заявки по номеру
-- принимает минимум 1 парамер 
-- ВАЖНО! Данная функция не гарантирует снятие заявки
-- Возвращает сообщение сервера в случае ошибки выявленной сервером Квик либо строку с информацией о транзакции
6.function killAllOrders(table_mask)
-- данная функция отправит транзакции на отмену АКТИВНЫХ заявок соответствующим фильтру указанному как входящий параметр table_mask
-- список всех возможных параметров : ACCOUNT,CLASSCODE,SECCODE,OPERATION,CLIENT_CODE,COMMENT
-- если вызвать функцию с параметром nil - снимутся ВСЕ активные заявки
7. function toLog(file_path,value)
-- запись в лог параметра value
-- value может быть числом, строкой или таблицей
-- file_path - путь к файлу
-- файл открывается на дозапись и закрывается после записи строки
8. function getHRTime()
-- возвращает время с милисекундами в виде строки
9. function getHRDateTime()
-- Возвращает строку с текущей датой и время с милисекундами
10. function toPrice(security,value)
-- преобразования значения value к цене инструмента правильного ФОРМАТА (обрезаем лишнии знаки после разделителя)
-- Возвращает строку
11. function getPosFromTable(table,value)
-- Возвращает ключ значения value из таблицы table, иначе -1
12. function orderflags2table(flags)
-- фнукция возвращает таблицу с полным описанием заявки по флагам
-- Атрибуты : active, cancelled, done,operation("B" for Buy, "S" for Sell),limit(1 - limit order, 0 - market order)
13. function bit_set( flags, index )
--функция возвращает true, если бит [index] установлен в 1
14. function getRowFromTable(table_name,key,value)
-- возвращаем строку (таблицу Луа) из таблицы table_name с столбцом key равным value, иначе nil.
-- table_name[key].value
15. function moveOrder(mode,fo_number,fo_p,fo_q,so_number,so_p,so_q)
-- перемещение заявки
-- минимальный набор параметров mode,fo_number,fo_p
-- в зависимости от класса первой заявки будет вызвана функция перемещения либо для СПОТ либо Срочного рынка
16. function moveOrderSpot(mode,fo_number,fo_p,fo_q,so_number,so_p,so_q)
-- перемещение заявок для рынка спот
-- минимальный набор параметров mode,fo_number,fo_p
-- отправится 2 транзакции снятие+постановка для каждой из указанных заявок
-- Возвращаем 2 параметра :
-- 1. Nil - если неудача или номер транзакции (2-й если 2 заявки)
-- 2. Диагностиеское сообщение
17. function moveOrderFO(mode,fo_number,fo_p,fo_q,so_number,so_p,so_q)
-- перемещение заявок для срочного рынка
-- отправка "нормальной" транзакции Квика
-- минимальный набор параметров mode,fo_number,fo_p 
-- Возвращаем 2 параметра :
-- 1. Nil - если неудача или номер транзакции (2-й если 2 заявки)
-- 2. Диагностиеское сообщение
18. function table2string(table)
-- превращение таблицы в строку
19. function getPosition(security)
-- возвращает текущую позицию по инструменту
20. sendStop(class,security,direction,stopprice,dealprice,volume,account,exp_date,client_code,comment)
-- отправка простой стоп-заявки
-- все параметры кроме кода клиента,коментария и времени жизни должны быть не нил
-- если код клиента нил - подлставляем счет
-- если время жизни не указано - то заявка "До Отмены"
-- Данная функция возвращает 2 параметра 
--     1. ID присвоенный транзакции либо nil если транзакция отвергнута на уровне сервера Квик
--     2. Ответное сообщение сервера Квик либо строку с параметрами транзакции
21. function stoporderflags2table(flags)
-- фнукция возвращает таблицу с полным описанием стоп-заявки по флагам
--[[ Атрибуты : 
	active, cancelled, done,operation("B" for Buy, "S" for Sell),limit(true - limit order, false - market order),
	mte(Возможно исполнение заявки несколькими сделками),wait_activation(Стоп-заявка ожидает активации),
	another_server(Стоп-заявка с другого сервера),tplopf(Устанавливается в случае стоп-заявки типа тейк-профита по заявке, в случае когда исходная заявка частично исполнена и по выставленной тейк-профит заявке на исполненную часть заявки выполнилось условие активации),
	manually_activated(Стоп-заявка активирована вручную),rejected(Стоп-заявка сработала, но была отвергнута торговой системой),
	rejected_limits(Стоп-заявка сработала, но не прошла контроль лимитов),cdtloc(Стоп-заявка снята, так как снята связанная заявка),
	cdtloe(Стоп-заявка снята, так как связанная заявка исполнена),minmaxcalc(Идет расчет минимума-максимума)
]]
22. function stoporderextflags2table(flags)
-- фнукция возвращает таблицу с дополнительнім описанием стоп-заявки по флагам
--[[ Атрибуты : 
	userest(Использовать остаток основной заявки), cpf(При частичном исполнении заявки снять стоп-заявку), asolopf(Активировать стоп-заявку при частичном исполнении связанной заявки),
	percent(Отступ задан в процентах, иначе – в пунктах цены),defpercent(Защитный спред задан в процентах, иначе – в пунктах цены),
	this_day(Срок действия стоп-заявки ограничен сегодняшним днем),interval(Установлен интервал времени действия стоп-заявки),
	markettp(Выполнение тейк-профита по рыночной цене),marketstop(Выполнение стоп-заявки по рыночной цене),
]]
23. function killStopOrder(orderkey,security,class)
-- функция отмены стоп-заявки по номеру
-- принимает минимум 1 парамер
-- ВАЖНО! Данная функция не гарантирует снятие заявки
-- Возвращает сообщение сервера в случае ошибки выявленной сервером Квик либо строку с информацией о транзакции
24. function killAllStopOrders(table_mask)
-- данная функция отправит транзакции на отмену АКТИВНЫХ стоп-заявок соответствующим фильтру указанному как входящий параметр table_mask
-- список всех возможных параметров  : ACCOUNT,CLASSCODE,SECCODE,OPERATION,CLIENT_CODE,COMMENT
-- если вызвать функцию с параметром nil - снимутся ВСЕ активные заявки
25. function isTradeTime(exchange, shift)
	--возвращает true если текущее серверное время является торговым для биржи exchange и false если нет (клиринг, нет торгов)
	-- возможные вариант бирж - UX,MICEX,FORTS
	-- в параметре shift следует указать сдвиг времени сервера брокера относительно времени бирж MICEX,FORTS (сервера размещены в Украине например)
26. function getSTime()
	--возвращает время сервера в виде числа
